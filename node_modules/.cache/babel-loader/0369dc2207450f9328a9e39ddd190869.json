{"ast":null,"code":"var _jsxFileName = \"/Users/wongdowling/Documents/my_notes/src/sections/Algorithm.js\";\nimport React from \"react\";\nimport Layout, { InlineMath, BlockMath, SyntaxHighlighter } from \"../Layout\";\nimport { Link } from \"react-router-dom\";\nimport { Route } from 'react-router-dom';\nimport PID from \"../subsections/Algorithm/PID\";\nconst content = /*#__PURE__*/React.createElement(\"main\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"h2\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 7\n  }\n}, \"Kmeans by SKlearn\"), /*#__PURE__*/React.createElement(BlockMath, {\n  math: \"c = \\\\\\\\pm\\\\\\\\sqrt{a^2 + b^2}\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(SyntaxHighlighter, {\n  language: \"python\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 7\n  }\n}, `import numpy as np\n          from sklearn.cluster import KMeans\n          X = np.array([[1, 2], [1, 4], [1, 0],\n                        [10, 2], [10, 4], [10, 0]])\n          kmeans = KMeans(n_clusters=2, random_state=0).fit(X)\n          print(kmeans.labels_)\n          `), /*#__PURE__*/React.createElement(\"hr\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(\"h2\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 7\n  }\n}, \"Gradient descent\"), /*#__PURE__*/React.createElement(\"hr\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(\"h2\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 7\n  }\n}, \"DarkQuest\"), /*#__PURE__*/React.createElement(SyntaxHighlighter, {\n  language: \"cpp\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 7\n  }\n}, `#include <iostream>\n          int main() {\n            std::cout << \"Hello, World!\";\n            return 0;\n          }\n          `), /*#__PURE__*/React.createElement(\"hr\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(\"h2\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }\n}, \"Support Vector Machine by SKlearn\"), /*#__PURE__*/React.createElement(\"hr\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(\"h2\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 7\n  }\n}, \"PID control\"), /*#__PURE__*/React.createElement(Route, {\n  path: \"/algorithm/pid\",\n  component: PID,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }\n}));\nfunction Algorithm() {\n  return content;\n}\nexport default Algorithm;","map":{"version":3,"names":["React","Layout","InlineMath","BlockMath","SyntaxHighlighter","Link","Route","PID","content","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","math","language","path","component","Algorithm"],"sources":["/Users/wongdowling/Documents/my_notes/src/sections/Algorithm.js"],"sourcesContent":["import React from \"react\";\nimport Layout, { InlineMath, BlockMath, SyntaxHighlighter } from \"../Layout\";\nimport { Link, } from \"react-router-dom\";\nimport { Route } from 'react-router-dom';\n\n\nimport PID from \"../subsections/Algorithm/PID\"\n\n\nconst content = (\n    <main>\n      <h2>Kmeans by SKlearn</h2>\n      <BlockMath math=\"c = \\\\pm\\\\sqrt{a^2 + b^2}\" />\n      <SyntaxHighlighter language=\"python\">\n        {`import numpy as np\n          from sklearn.cluster import KMeans\n          X = np.array([[1, 2], [1, 4], [1, 0],\n                        [10, 2], [10, 4], [10, 0]])\n          kmeans = KMeans(n_clusters=2, random_state=0).fit(X)\n          print(kmeans.labels_)\n          `}\n      </SyntaxHighlighter>\n      <hr />\n      <h2>Gradient descent</h2>\n      <hr />\n      <h2>DarkQuest</h2>\n      <SyntaxHighlighter language=\"cpp\">\n        {`#include <iostream>\n          int main() {\n            std::cout << \"Hello, World!\";\n            return 0;\n          }\n          `}\n      </SyntaxHighlighter>\n      <hr />\n      <h2>Support Vector Machine by SKlearn</h2>\n      <hr />\n      <h2>PID control</h2>\n      <Route path=\"/algorithm/pid\" component={PID} />\n\n    </main>\n);\n\n\nfunction Algorithm() {\n  return content;\n}\n\nexport default Algorithm;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,IAAIC,UAAU,EAAEC,SAAS,EAAEC,iBAAiB,QAAQ,WAAW;AAC5E,SAASC,IAAI,QAAS,kBAAkB;AACxC,SAASC,KAAK,QAAQ,kBAAkB;AAGxC,OAAOC,GAAG,MAAM,8BAA8B;AAG9C,MAAMC,OAAO,gBACTR,KAAA,CAAAS,aAAA;EAAAC,MAAA;EAAAC,QAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAA,gBACEf,KAAA,CAAAS,aAAA;EAAAC,MAAA;EAAAC,QAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAA,GAAI,mBAAqB,CAAC,eAC1Bf,KAAA,CAAAS,aAAA,CAACN,SAAS;EAACa,IAAI,EAAC,+BAA2B;EAAAN,MAAA;EAAAC,QAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAA,CAAE,CAAC,eAC9Cf,KAAA,CAAAS,aAAA,CAACL,iBAAiB;EAACa,QAAQ,EAAC,QAAQ;EAAAP,MAAA;EAAAC,QAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAA,GACjC;AACT;AACA;AACA;AACA;AACA;AACA,WACyB,CAAC,eACpBf,KAAA,CAAAS,aAAA;EAAAC,MAAA;EAAAC,QAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAA,CAAK,CAAC,eACNf,KAAA,CAAAS,aAAA;EAAAC,MAAA;EAAAC,QAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAA,GAAI,kBAAoB,CAAC,eACzBf,KAAA,CAAAS,aAAA;EAAAC,MAAA;EAAAC,QAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAA,CAAK,CAAC,eACNf,KAAA,CAAAS,aAAA;EAAAC,MAAA;EAAAC,QAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAA,GAAI,WAAa,CAAC,eAClBf,KAAA,CAAAS,aAAA,CAACL,iBAAiB;EAACa,QAAQ,EAAC,KAAK;EAAAP,MAAA;EAAAC,QAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAA,GAC9B;AACT;AACA;AACA;AACA;AACA,WACyB,CAAC,eACpBf,KAAA,CAAAS,aAAA;EAAAC,MAAA;EAAAC,QAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAA,CAAK,CAAC,eACNf,KAAA,CAAAS,aAAA;EAAAC,MAAA;EAAAC,QAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAA,GAAI,mCAAqC,CAAC,eAC1Cf,KAAA,CAAAS,aAAA;EAAAC,MAAA;EAAAC,QAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAA,CAAK,CAAC,eACNf,KAAA,CAAAS,aAAA;EAAAC,MAAA;EAAAC,QAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAA,GAAI,aAAe,CAAC,eACpBf,KAAA,CAAAS,aAAA,CAACH,KAAK;EAACY,IAAI,EAAC,gBAAgB;EAACC,SAAS,EAAEZ,GAAI;EAAAG,MAAA;EAAAC,QAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAA,CAAE,CAE1C,CACT;AAGD,SAASK,SAASA,CAAA,EAAG;EACnB,OAAOZ,OAAO;AAChB;AAEA,eAAeY,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module"}