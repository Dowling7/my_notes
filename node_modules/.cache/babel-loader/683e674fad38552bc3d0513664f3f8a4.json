{"ast":null,"code":"'use strict';\n\nvar core = require('@react-pdf-viewer/core');\nvar React = require('react');\nfunction _interopNamespaceDefault(e) {\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () {\n            return e[k];\n          }\n        });\n      }\n    });\n  }\n  n.default = e;\n  return Object.freeze(n);\n}\nvar React__namespace = /*#__PURE__*/_interopNamespaceDefault(React);\nvar OpenFileIcon = function () {\n  return React__namespace.createElement(core.Icon, {\n    size: 16\n  }, React__namespace.createElement(\"path\", {\n    d: \"M18.5,7.5c.275,0,.341-.159.146-.354L12.354.854a.5.5,0,0,0-.708,0L5.354,7.147c-.2.195-.129.354.146.354h3v10a1,1,0,0,0,1,1h5a1,1,0,0,0,1-1V7.5Z\"\n  }), React__namespace.createElement(\"path\", {\n    d: \"M23.5,18.5v4a1,1,0,0,1-1,1H1.5a1,1,0,0,1-1-1v-4\"\n  }));\n};\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar useTriggerOpen = function (store) {\n  var inputRef = React__namespace.useRef();\n  var openFile = function () {\n    var inputEle = inputRef.current;\n    if (inputEle) {\n      inputEle.click();\n      if (store.get('triggerOpenFile')) {\n        store.update('triggerOpenFile', false);\n      }\n    }\n  };\n  var handleOpenFileTriggered = function (trigger) {\n    if (trigger) {\n      openFile();\n    }\n  };\n  React__namespace.useEffect(function () {\n    store.subscribe('triggerOpenFile', handleOpenFileTriggered);\n    return function () {\n      store.unsubscribe('triggerOpenFile', handleOpenFileTriggered);\n    };\n  }, []);\n  return {\n    inputRef: inputRef,\n    openFile: openFile\n  };\n};\nvar TOOLTIP_OFFSET = {\n  left: 0,\n  top: 8\n};\nvar OpenButton = function (_a) {\n  var enableShortcuts = _a.enableShortcuts,\n    store = _a.store,\n    onClick = _a.onClick;\n  var l10n = React__namespace.useContext(core.LocalizationContext).l10n;\n  var label = l10n && l10n.open ? l10n.open.openFile : 'Open file';\n  var _b = useTriggerOpen(store),\n    inputRef = _b.inputRef,\n    openFile = _b.openFile;\n  var ariaKeyShortcuts = enableShortcuts ? core.isMac() ? 'Meta+O' : 'Ctrl+O' : '';\n  return React__namespace.createElement(core.Tooltip, {\n    ariaControlsSuffix: \"open\",\n    position: core.Position.BottomCenter,\n    target: React__namespace.createElement(\"div\", {\n      className: \"rpv-open__input-wrapper\"\n    }, React__namespace.createElement(\"input\", {\n      accept: \".pdf\",\n      ref: inputRef,\n      className: \"rpv-open__input\",\n      multiple: false,\n      tabIndex: -1,\n      title: \"\",\n      type: \"file\",\n      onChange: onClick\n    }), React__namespace.createElement(core.MinimalButton, {\n      ariaKeyShortcuts: ariaKeyShortcuts,\n      ariaLabel: label,\n      testId: \"open__button\",\n      onClick: openFile\n    }, React__namespace.createElement(OpenFileIcon, null))),\n    content: function () {\n      return label;\n    },\n    offset: TOOLTIP_OFFSET\n  });\n};\nvar Open = function (_a) {\n  var children = _a.children,\n    enableShortcuts = _a.enableShortcuts,\n    store = _a.store;\n  var handleOpenFiles = function (e) {\n    var files = e.target.files;\n    if (!files || !files.length) {\n      return;\n    }\n    var openFile = store.get('openFile');\n    if (openFile) {\n      openFile(files[0]);\n    }\n  };\n  var defaultChildren = function (props) {\n    return React__namespace.createElement(OpenButton, {\n      enableShortcuts: enableShortcuts,\n      store: store,\n      onClick: props.onClick\n    });\n  };\n  var render = children || defaultChildren;\n  return render({\n    onClick: handleOpenFiles\n  });\n};\nvar OpenMenuItem = function (_a) {\n  var store = _a.store,\n    onClick = _a.onClick;\n  var l10n = React__namespace.useContext(core.LocalizationContext).l10n;\n  var label = l10n && l10n.open ? l10n.open.openFile : 'Open file';\n  var _b = useTriggerOpen(store),\n    inputRef = _b.inputRef,\n    openFile = _b.openFile;\n  return React__namespace.createElement(core.MenuItem, {\n    icon: React__namespace.createElement(OpenFileIcon, null),\n    testId: \"open__menu\",\n    onClick: openFile\n  }, React__namespace.createElement(\"div\", {\n    className: \"rpv-open__input-wrapper\"\n  }, React__namespace.createElement(\"input\", {\n    accept: \".pdf\",\n    ref: inputRef,\n    className: \"rpv-open__input\",\n    multiple: false,\n    tabIndex: -1,\n    title: \"\",\n    type: \"file\",\n    onChange: onClick\n  }), label));\n};\nvar ShortcutHandler = function (_a) {\n  var containerRef = _a.containerRef,\n    store = _a.store;\n  var keydownHandler = function (e) {\n    if (e.shiftKey || e.altKey || e.key !== 'o') {\n      return;\n    }\n    var isCommandPressed = core.isMac() ? e.metaKey : e.ctrlKey;\n    if (!isCommandPressed) {\n      return;\n    }\n    var containerEle = containerRef.current;\n    if (!containerEle || !document.activeElement || !containerEle.contains(document.activeElement)) {\n      return;\n    }\n    e.preventDefault();\n    store.update('triggerOpenFile', true);\n  };\n  React__namespace.useEffect(function () {\n    var containerEle = containerRef.current;\n    if (!containerEle) {\n      return;\n    }\n    document.addEventListener('keydown', keydownHandler);\n    return function () {\n      document.removeEventListener('keydown', keydownHandler);\n    };\n  }, [containerRef.current]);\n  return React__namespace.createElement(React__namespace.Fragment, null);\n};\nvar openPlugin = function (props) {\n  var openPluginProps = React__namespace.useMemo(function () {\n    return Object.assign({}, {\n      enableShortcuts: true\n    }, props);\n  }, []);\n  var store = React__namespace.useMemo(function () {\n    return core.createStore({});\n  }, []);\n  var OpenDecorator = function (props) {\n    return React__namespace.createElement(Open, __assign({\n      enableShortcuts: openPluginProps.enableShortcuts\n    }, props, {\n      store: store\n    }));\n  };\n  var OpenButtonDecorator = function () {\n    return React__namespace.createElement(OpenDecorator, null);\n  };\n  var OpenMenuItemDecorator = function () {\n    return React__namespace.createElement(OpenDecorator, null, function (p) {\n      return React__namespace.createElement(OpenMenuItem, {\n        store: store,\n        onClick: p.onClick\n      });\n    });\n  };\n  var renderViewer = function (props) {\n    var slot = props.slot;\n    var updateSlot = {\n      children: React__namespace.createElement(React__namespace.Fragment, null, openPluginProps.enableShortcuts && React__namespace.createElement(ShortcutHandler, {\n        containerRef: props.containerRef,\n        store: store\n      }), slot.children)\n    };\n    return __assign(__assign({}, slot), updateSlot);\n  };\n  return {\n    install: function (pluginFunctions) {\n      store.update('openFile', pluginFunctions.openFile);\n    },\n    renderViewer: renderViewer,\n    Open: OpenDecorator,\n    OpenButton: OpenButtonDecorator,\n    OpenMenuItem: OpenMenuItemDecorator\n  };\n};\nexports.OpenFileIcon = OpenFileIcon;\nexports.openPlugin = openPlugin;","map":null,"metadata":{},"sourceType":"script"}