{"ast":null,"code":"'use strict';\n\nvar core = require('@react-pdf-viewer/core');\nvar React = require('react');\nfunction _interopNamespaceDefault(e) {\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () {\n            return e[k];\n          }\n        });\n      }\n    });\n  }\n  n.default = e;\n  return Object.freeze(n);\n}\nvar React__namespace = /*#__PURE__*/_interopNamespaceDefault(React);\nvar HandToolIcon = function () {\n  return React__namespace.createElement(core.Icon, {\n    size: 16\n  }, React__namespace.createElement(\"path\", {\n    d: \"M11.5,5.5v-2C11.5,2.672,12.172,2,13,2s1.5,0.672,1.5,1.5v2 M14.5,11.5v-6C14.5,4.672,15.172,4,16,4\\n            c0.828,0,1.5,0.672,1.5,1.5v3 M17.5,13V8.5C17.5,7.672,18.172,7,19,7s1.5,0.672,1.5,1.5v10c0,2.761-2.239,5-5,5h-3.335\\n            c-1.712-0.001-3.305-0.876-4.223-2.321C6.22,18.467,4.083,14,4.083,14c-0.378-0.545-0.242-1.292,0.303-1.67\\n            c0.446-0.309,1.044-0.281,1.458,0.07L8.5,15.5v-10C8.5,4.672,9.172,4,10,4s1.5,0.672,1.5,1.5v6\"\n  }));\n};\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nexports.SelectionMode = void 0;\n(function (SelectionMode) {\n  SelectionMode[\"Hand\"] = \"Hand\";\n  SelectionMode[\"Text\"] = \"Text\";\n})(exports.SelectionMode || (exports.SelectionMode = {}));\nvar TextSelectionIcon = function () {\n  return React__namespace.createElement(core.Icon, {\n    size: 16\n  }, React__namespace.createElement(\"path\", {\n    d: \"M13.675,11.671l2.941-2.941c0.195-0.196,0.195-0.512-0.001-0.707C16.563,7.971,16.5,7.931,16.43,7.906\\n            L4.168,3.527C3.908,3.434,3.622,3.57,3.529,3.83c-0.039,0.109-0.039,0.228,0,0.336l4.379,12.262\\n            c0.093,0.26,0.379,0.396,0.639,0.303c0.07-0.025,0.133-0.065,0.185-0.117l2.943-2.943l6.146,6.146c0.195,0.195,0.512,0.195,0.707,0\\n            l1.293-1.293c0.195-0.195,0.195-0.512,0-0.707L13.675,11.671z\"\n  }));\n};\nvar SwitchSelectionModeDecorator = function (_a) {\n  var children = _a.children,\n    mode = _a.mode,\n    onClick = _a.onClick;\n  var l10n = React__namespace.useContext(core.LocalizationContext).l10n;\n  var label = '';\n  var icon = React__namespace.createElement(TextSelectionIcon, null);\n  switch (mode) {\n    case exports.SelectionMode.Hand:\n      label = l10n && l10n.selectionMode ? l10n.selectionMode.handTool : 'Hand tool';\n      icon = React__namespace.createElement(HandToolIcon, null);\n      break;\n    case exports.SelectionMode.Text:\n    default:\n      label = l10n && l10n.selectionMode ? l10n.selectionMode.textSelectionTool : 'Text selection tool';\n      icon = React__namespace.createElement(TextSelectionIcon, null);\n      break;\n  }\n  return children({\n    icon: icon,\n    label: label,\n    onClick: onClick\n  });\n};\nvar TOOLTIP_OFFSET = {\n  left: 0,\n  top: 8\n};\nvar SwitchSelectionModeButton = function (_a) {\n  var isSelected = _a.isSelected,\n    mode = _a.mode,\n    onClick = _a.onClick;\n  var testId = '';\n  switch (mode) {\n    case exports.SelectionMode.Hand:\n      testId = 'selection-mode__hand-button';\n      break;\n    case exports.SelectionMode.Text:\n    default:\n      testId = 'selection-mode__text-button';\n  }\n  return React__namespace.createElement(SwitchSelectionModeDecorator, {\n    mode: mode,\n    onClick: onClick\n  }, function (props) {\n    return React__namespace.createElement(core.Tooltip, {\n      ariaControlsSuffix: \"selection-mode-switch\",\n      position: core.Position.BottomCenter,\n      target: React__namespace.createElement(core.MinimalButton, {\n        ariaLabel: props.label,\n        isSelected: isSelected,\n        testId: testId,\n        onClick: props.onClick\n      }, props.icon),\n      content: function () {\n        return props.label;\n      },\n      offset: TOOLTIP_OFFSET\n    });\n  });\n};\nvar SwitchSelectionMode = function (_a) {\n  var children = _a.children,\n    mode = _a.mode,\n    store = _a.store;\n  var onClick = function () {\n    return store.update('selectionMode', mode);\n  };\n  var isSelected = mode === store.get('selectionMode');\n  var defaultChildren = function (props) {\n    return React__namespace.createElement(SwitchSelectionModeButton, {\n      isSelected: isSelected,\n      mode: props.mode,\n      onClick: props.onClick\n    });\n  };\n  var render = children || defaultChildren;\n  return render({\n    isSelected: isSelected,\n    mode: mode,\n    onClick: onClick\n  });\n};\nvar SwitchSelectionModeMenuItem = function (_a) {\n  var isSelected = _a.isSelected,\n    mode = _a.mode,\n    onClick = _a.onClick;\n  var testId = '';\n  switch (mode) {\n    case exports.SelectionMode.Hand:\n      testId = 'selection-mode__hand-menu';\n      break;\n    case exports.SelectionMode.Text:\n    default:\n      testId = 'selection-mode__text-menu';\n  }\n  return React__namespace.createElement(SwitchSelectionModeDecorator, {\n    mode: mode,\n    onClick: onClick\n  }, function (props) {\n    return React__namespace.createElement(core.MenuItem, {\n      checked: isSelected,\n      icon: props.icon,\n      testId: testId,\n      onClick: props.onClick\n    }, props.label);\n  });\n};\nvar Tracker = function (_a) {\n  var store = _a.store;\n  var pagesRef = React__namespace.useRef(null);\n  var _b = React__namespace.useState(exports.SelectionMode.Text),\n    selectionMode = _b[0],\n    setSelectionMode = _b[1];\n  var pos = React__namespace.useRef({\n    top: 0,\n    left: 0,\n    x: 0,\n    y: 0\n  });\n  var onMouseMoveHandler = function (e) {\n    var ele = pagesRef.current;\n    if (!ele) {\n      return;\n    }\n    ele.scrollTop = pos.current.top - (e.clientY - pos.current.y);\n    ele.scrollLeft = pos.current.left - (e.clientX - pos.current.x);\n  };\n  var onMouseUpHandler = function () {\n    var ele = pagesRef.current;\n    if (!ele) {\n      return;\n    }\n    ele.classList.add('rpv-selection-mode__grab');\n    ele.classList.remove('rpv-selection-mode__grabbing');\n    document.removeEventListener('mousemove', onMouseMoveHandler);\n    document.removeEventListener('mouseup', onMouseUpHandler);\n  };\n  var onMouseDownHandler = function (e) {\n    var ele = pagesRef.current;\n    if (!ele || selectionMode === exports.SelectionMode.Text) {\n      return;\n    }\n    ele.classList.remove('rpv-selection-mode__grab');\n    ele.classList.add('rpv-selection-mode__grabbing');\n    e.preventDefault();\n    e.stopPropagation();\n    pos.current = {\n      left: ele.scrollLeft,\n      top: ele.scrollTop,\n      x: e.clientX,\n      y: e.clientY\n    };\n    document.addEventListener('mousemove', onMouseMoveHandler);\n    document.addEventListener('mouseup', onMouseUpHandler);\n  };\n  var handlePagesContainer = function (getPagesContainer) {\n    pagesRef.current = getPagesContainer();\n  };\n  var handleSelectionModeChanged = function (mode) {\n    setSelectionMode(mode);\n  };\n  React__namespace.useEffect(function () {\n    var ele = pagesRef.current;\n    if (!ele) {\n      return;\n    }\n    selectionMode === exports.SelectionMode.Hand ? ele.classList.add('rpv-selection-mode__grab') : ele.classList.remove('rpv-selection-mode__grab');\n    ele.addEventListener('mousedown', onMouseDownHandler);\n    return function () {\n      ele.removeEventListener('mousedown', onMouseDownHandler);\n    };\n  }, [selectionMode]);\n  React__namespace.useEffect(function () {\n    store.subscribe('getPagesContainer', handlePagesContainer);\n    store.subscribe('selectionMode', handleSelectionModeChanged);\n    return function () {\n      store.unsubscribe('getPagesContainer', handlePagesContainer);\n      store.unsubscribe('selectionMode', handleSelectionModeChanged);\n    };\n  }, []);\n  return React__namespace.createElement(React__namespace.Fragment, null);\n};\nvar selectionModePlugin = function (props) {\n  var store = React__namespace.useMemo(function () {\n    return core.createStore();\n  }, []);\n  var SwitchSelectionModeDecorator = function (props) {\n    return React__namespace.createElement(SwitchSelectionMode, __assign({}, props, {\n      store: store\n    }));\n  };\n  var SwitchSelectionModeButtonDecorator = function (props) {\n    return React__namespace.createElement(SwitchSelectionModeDecorator, {\n      mode: props.mode\n    }, function (p) {\n      return React__namespace.createElement(SwitchSelectionModeButton, {\n        isSelected: p.isSelected,\n        mode: p.mode,\n        onClick: function () {\n          p.onClick();\n        }\n      });\n    });\n  };\n  var SwitchSelectionModeMenuItemDecorator = function (props) {\n    return React__namespace.createElement(SwitchSelectionModeDecorator, {\n      mode: props.mode\n    }, function (p) {\n      return React__namespace.createElement(SwitchSelectionModeMenuItem, {\n        isSelected: p.isSelected,\n        mode: p.mode,\n        onClick: function () {\n          p.onClick();\n          props.onClick();\n        }\n      });\n    });\n  };\n  var renderViewer = function (props) {\n    var currentSlot = props.slot;\n    if (currentSlot.subSlot && currentSlot.subSlot.children) {\n      currentSlot.subSlot.children = React__namespace.createElement(React__namespace.Fragment, null, React__namespace.createElement(Tracker, {\n        store: store\n      }), currentSlot.subSlot.children);\n    }\n    return currentSlot;\n  };\n  return {\n    install: function (pluginFunctions) {\n      store.update('selectionMode', props && props.selectionMode ? props.selectionMode : exports.SelectionMode.Text);\n      store.update('getPagesContainer', pluginFunctions.getPagesContainer);\n    },\n    renderViewer: renderViewer,\n    SwitchSelectionMode: SwitchSelectionModeDecorator,\n    SwitchSelectionModeButton: SwitchSelectionModeButtonDecorator,\n    SwitchSelectionModeMenuItem: SwitchSelectionModeMenuItemDecorator\n  };\n};\nexports.HandToolIcon = HandToolIcon;\nexports.TextSelectionIcon = TextSelectionIcon;\nexports.selectionModePlugin = selectionModePlugin;","map":null,"metadata":{},"sourceType":"script"}