{"ast":null,"code":"'use strict';\n\nvar core = require('@react-pdf-viewer/core');\nvar React = require('react');\nfunction _interopNamespaceDefault(e) {\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () {\n            return e[k];\n          }\n        });\n      }\n    });\n  }\n  n.default = e;\n  return Object.freeze(n);\n}\nvar React__namespace = /*#__PURE__*/_interopNamespaceDefault(React);\nvar getFileName = function (url) {\n  var str = url.split('/').pop();\n  return str ? str.split('#')[0].split('?')[0] : url;\n};\nvar downloadFile = function (url, data) {\n  var blobUrl = typeof data === 'string' ? '' : URL.createObjectURL(new Blob([data], {\n    type: ''\n  }));\n  var link = document.createElement('a');\n  link.style.display = 'none';\n  link.href = blobUrl || url;\n  link.setAttribute('download', getFileName(url));\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n  if (blobUrl) {\n    URL.revokeObjectURL(blobUrl);\n  }\n};\nvar AttachmentList = function (_a) {\n  var files = _a.files;\n  var containerRef = React__namespace.useRef();\n  var l10n = React__namespace.useContext(core.LocalizationContext).l10n;\n  var direction = React__namespace.useContext(core.ThemeContext).direction;\n  var isRtl = direction === core.TextDirection.RightToLeft;\n  var attachmentItemsRef = React__namespace.useRef([]);\n  var clickDownloadLabel = l10n && l10n.attachment ? l10n.attachment.clickToDownload : 'Click to download';\n  var handleKeyDown = function (e) {\n    switch (e.key) {\n      case 'ArrowDown':\n        e.preventDefault();\n        moveToItem(function (items, activeEle) {\n          return items.indexOf(activeEle) + 1;\n        });\n        break;\n      case 'ArrowUp':\n        e.preventDefault();\n        moveToItem(function (items, activeEle) {\n          return items.indexOf(activeEle) - 1;\n        });\n        break;\n      case 'End':\n        e.preventDefault();\n        moveToItem(function (items, _) {\n          return items.length - 1;\n        });\n        break;\n      case 'Home':\n        e.preventDefault();\n        moveToItem(function (_, __) {\n          return 0;\n        });\n        break;\n    }\n  };\n  var moveToItem = function (getItemIndex) {\n    var container = containerRef.current;\n    var attachmentItems = [].slice.call(container.getElementsByClassName('rpv-attachment__item'));\n    if (attachmentItems.length === 0) {\n      return;\n    }\n    attachmentItems.forEach(function (item) {\n      return item.setAttribute('tabindex', '-1');\n    });\n    var activeEle = document.activeElement;\n    var targetIndex = Math.min(attachmentItems.length - 1, Math.max(0, getItemIndex(attachmentItems, activeEle)));\n    var targetEle = attachmentItems[targetIndex];\n    targetEle.setAttribute('tabindex', '0');\n    targetEle.focus();\n  };\n  core.useIsomorphicLayoutEffect(function () {\n    var container = containerRef.current;\n    if (!container) {\n      return;\n    }\n    var attachmentItems = [].slice.call(container.getElementsByClassName('rpv-attachment__item'));\n    attachmentItemsRef.current = attachmentItems;\n    if (attachmentItems.length > 0) {\n      var firstItem = attachmentItems[0];\n      firstItem.focus();\n      firstItem.setAttribute('tabindex', '0');\n    }\n  }, []);\n  return React__namespace.createElement(\"div\", {\n    \"data-testid\": \"attachment__list\",\n    className: core.classNames({\n      'rpv-attachment__list': true,\n      'rpv-attachment__list--rtl': isRtl\n    }),\n    ref: containerRef,\n    tabIndex: -1,\n    onKeyDown: handleKeyDown\n  }, files.map(function (file) {\n    return React__namespace.createElement(\"button\", {\n      className: \"rpv-attachment__item\",\n      key: file.fileName,\n      tabIndex: -1,\n      title: clickDownloadLabel,\n      type: \"button\",\n      onClick: function () {\n        return downloadFile(file.fileName, file.data);\n      }\n    }, file.fileName);\n  }));\n};\nvar AttachmentLoader = function (_a) {\n  var doc = _a.doc;\n  var l10n = React__namespace.useContext(core.LocalizationContext).l10n;\n  var direction = React__namespace.useContext(core.ThemeContext).direction;\n  var isRtl = direction === core.TextDirection.RightToLeft;\n  var noAttachmentLabel = l10n && l10n.attachment ? l10n.attachment.noAttachment : 'There is no attachment';\n  var _b = React__namespace.useState({\n      files: [],\n      isLoaded: false\n    }),\n    attachments = _b[0],\n    setAttachments = _b[1];\n  React__namespace.useEffect(function () {\n    doc.getAttachments().then(function (response) {\n      var files = response ? Object.keys(response).map(function (file) {\n        return {\n          data: response[file].content,\n          fileName: response[file].filename\n        };\n      }) : [];\n      setAttachments({\n        files: files,\n        isLoaded: true\n      });\n    });\n  }, [doc]);\n  return !attachments.isLoaded ? React__namespace.createElement(core.Spinner, null) : attachments.files.length === 0 ? React__namespace.createElement(\"div\", {\n    \"data-testid\": \"attachment__empty\",\n    className: core.classNames({\n      'rpv-attachment__empty': true,\n      'rpv-attachment__empty--rtl': isRtl\n    })\n  }, noAttachmentLabel) : React__namespace.createElement(AttachmentList, {\n    files: attachments.files\n  });\n};\nvar AttachmentListWithStore = function (_a) {\n  var store = _a.store;\n  var _b = React__namespace.useState(store.get('doc')),\n    currentDoc = _b[0],\n    setCurrentDoc = _b[1];\n  var handleDocumentChanged = function (doc) {\n    setCurrentDoc(doc);\n  };\n  React__namespace.useEffect(function () {\n    store.subscribe('doc', handleDocumentChanged);\n    return function () {\n      store.unsubscribe('doc', handleDocumentChanged);\n    };\n  }, []);\n  return currentDoc ? React__namespace.createElement(AttachmentLoader, {\n    doc: currentDoc\n  }) : React__namespace.createElement(\"div\", {\n    className: \"rpv-attachment__loader\"\n  }, React__namespace.createElement(core.Spinner, null));\n};\nvar attachmentPlugin = function () {\n  var store = React__namespace.useMemo(function () {\n    return core.createStore({});\n  }, []);\n  var AttachmentsDecorator = function () {\n    return React__namespace.createElement(AttachmentListWithStore, {\n      store: store\n    });\n  };\n  return {\n    onDocumentLoad: function (props) {\n      store.update('doc', props.doc);\n    },\n    Attachments: AttachmentsDecorator\n  };\n};\nexports.attachmentPlugin = attachmentPlugin;","map":null,"metadata":{},"sourceType":"script"}