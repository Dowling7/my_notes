{"ast":null,"code":"'use strict';\n\nvar core = require('@react-pdf-viewer/core');\nvar selectionMode = require('@react-pdf-viewer/selection-mode');\nvar React = require('react');\nvar fullScreen = require('@react-pdf-viewer/full-screen');\nvar getFile = require('@react-pdf-viewer/get-file');\nvar open = require('@react-pdf-viewer/open');\nvar pageNavigation = require('@react-pdf-viewer/page-navigation');\nvar print = require('@react-pdf-viewer/print');\nvar properties = require('@react-pdf-viewer/properties');\nvar rotate = require('@react-pdf-viewer/rotate');\nvar scrollMode = require('@react-pdf-viewer/scroll-mode');\nvar search = require('@react-pdf-viewer/search');\nvar theme = require('@react-pdf-viewer/theme');\nvar zoom = require('@react-pdf-viewer/zoom');\nfunction _interopNamespaceDefault(e) {\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () {\n            return e[k];\n          }\n        });\n      }\n    });\n  }\n  n.default = e;\n  return Object.freeze(n);\n}\nvar React__namespace = /*#__PURE__*/_interopNamespaceDefault(React);\nvar MoreIcon = function () {\n  return React__namespace.createElement(core.Icon, {\n    size: 16\n  }, React__namespace.createElement(\"path\", {\n    d: \"M12,0.5c1.381,0,2.5,1.119,2.5,2.5S13.381,5.5,12,5.5S9.5,4.381,9.5,3S10.619,0.5,12,0.5z\\n            M12,9.5\\n            c1.381,0,2.5,1.119,2.5,2.5s-1.119,2.5-2.5,2.5S9.5,13.381,9.5,12S10.619,9.5,12,9.5z\\n            M12,18.5c1.381,0,2.5,1.119,2.5,2.5\\n            s-1.119,2.5-2.5,2.5S9.5,22.381,9.5,21S10.619,18.5,12,18.5z\"\n  }));\n};\nvar PORTAL_OFFSET = {\n  left: 0,\n  top: 8\n};\nvar MoreActionsPopover = function (_a) {\n  var toolbarSlot = _a.toolbarSlot;\n  var l10n = React__namespace.useContext(core.LocalizationContext).l10n;\n  var direction = React__namespace.useContext(core.ThemeContext).direction;\n  var portalPosition = direction === core.TextDirection.RightToLeft ? core.Position.BottomLeft : core.Position.BottomRight;\n  var DownloadMenuItem = toolbarSlot.DownloadMenuItem,\n    EnterFullScreenMenuItem = toolbarSlot.EnterFullScreenMenuItem,\n    GoToFirstPageMenuItem = toolbarSlot.GoToFirstPageMenuItem,\n    GoToLastPageMenuItem = toolbarSlot.GoToLastPageMenuItem,\n    GoToNextPageMenuItem = toolbarSlot.GoToNextPageMenuItem,\n    GoToPreviousPageMenuItem = toolbarSlot.GoToPreviousPageMenuItem,\n    OpenMenuItem = toolbarSlot.OpenMenuItem,\n    PrintMenuItem = toolbarSlot.PrintMenuItem,\n    RotateBackwardMenuItem = toolbarSlot.RotateBackwardMenuItem,\n    RotateForwardMenuItem = toolbarSlot.RotateForwardMenuItem,\n    ShowPropertiesMenuItem = toolbarSlot.ShowPropertiesMenuItem,\n    SwitchScrollModeMenuItem = toolbarSlot.SwitchScrollModeMenuItem,\n    SwitchSelectionModeMenuItem = toolbarSlot.SwitchSelectionModeMenuItem,\n    SwitchViewModeMenuItem = toolbarSlot.SwitchViewModeMenuItem,\n    SwitchThemeMenuItem = toolbarSlot.SwitchThemeMenuItem;\n  var renderTarget = function (toggle, opened) {\n    var label = l10n && l10n.toolbar ? l10n.toolbar.moreActions : 'More actions';\n    return React__namespace.createElement(core.Tooltip, {\n      ariaControlsSuffix: \"toolbar-more-actions\",\n      position: portalPosition,\n      target: React__namespace.createElement(core.MinimalButton, {\n        ariaLabel: label,\n        isSelected: opened,\n        testId: \"toolbar__more-actions-popover-target\",\n        onClick: toggle\n      }, React__namespace.createElement(MoreIcon, null)),\n      content: function () {\n        return label;\n      },\n      offset: PORTAL_OFFSET\n    });\n  };\n  var renderContent = function (toggle) {\n    return React__namespace.createElement(core.Menu, null, React__namespace.createElement(\"div\", {\n      className: \"rpv-core__display--block rpv-core__display--hidden-medium\"\n    }, React__namespace.createElement(SwitchThemeMenuItem, {\n      onClick: toggle\n    })), React__namespace.createElement(\"div\", {\n      className: \"rpv-core__display--block rpv-core__display--hidden-medium\"\n    }, React__namespace.createElement(EnterFullScreenMenuItem, {\n      onClick: toggle\n    })), React__namespace.createElement(\"div\", {\n      className: \"rpv-core__display--block rpv-core__display--hidden-medium\"\n    }, React__namespace.createElement(OpenMenuItem, null)), React__namespace.createElement(\"div\", {\n      className: \"rpv-core__display--block rpv-core__display--hidden-medium\"\n    }, React__namespace.createElement(PrintMenuItem, {\n      onClick: toggle\n    })), React__namespace.createElement(\"div\", {\n      className: \"rpv-core__display--block rpv-core__display--hidden-medium\"\n    }, React__namespace.createElement(DownloadMenuItem, {\n      onClick: toggle\n    })), React__namespace.createElement(\"div\", {\n      className: \"rpv-core__display--block rpv-core__display--hidden-medium\"\n    }, React__namespace.createElement(core.MenuDivider, null)), React__namespace.createElement(GoToFirstPageMenuItem, {\n      onClick: toggle\n    }), React__namespace.createElement(\"div\", {\n      className: \"rpv-core__display--block rpv-core__display--hidden-medium\"\n    }, React__namespace.createElement(GoToPreviousPageMenuItem, {\n      onClick: toggle\n    })), React__namespace.createElement(\"div\", {\n      className: \"rpv-core__display--block rpv-core__display--hidden-medium\"\n    }, React__namespace.createElement(GoToNextPageMenuItem, {\n      onClick: toggle\n    })), React__namespace.createElement(GoToLastPageMenuItem, {\n      onClick: toggle\n    }), React__namespace.createElement(core.MenuDivider, null), React__namespace.createElement(RotateForwardMenuItem, {\n      onClick: toggle\n    }), React__namespace.createElement(RotateBackwardMenuItem, {\n      onClick: toggle\n    }), React__namespace.createElement(core.MenuDivider, null), React__namespace.createElement(SwitchSelectionModeMenuItem, {\n      mode: selectionMode.SelectionMode.Text,\n      onClick: toggle\n    }), React__namespace.createElement(SwitchSelectionModeMenuItem, {\n      mode: selectionMode.SelectionMode.Hand,\n      onClick: toggle\n    }), React__namespace.createElement(core.MenuDivider, null), React__namespace.createElement(SwitchScrollModeMenuItem, {\n      mode: core.ScrollMode.Page,\n      onClick: toggle\n    }), React__namespace.createElement(SwitchScrollModeMenuItem, {\n      mode: core.ScrollMode.Vertical,\n      onClick: toggle\n    }), React__namespace.createElement(SwitchScrollModeMenuItem, {\n      mode: core.ScrollMode.Horizontal,\n      onClick: toggle\n    }), React__namespace.createElement(SwitchScrollModeMenuItem, {\n      mode: core.ScrollMode.Wrapped,\n      onClick: toggle\n    }), React__namespace.createElement(core.MenuDivider, null), React__namespace.createElement(\"div\", {\n      className: \"rpv-core__display--hidden rpv-core__display--block-small\"\n    }, React__namespace.createElement(SwitchViewModeMenuItem, {\n      mode: core.ViewMode.SinglePage,\n      onClick: toggle\n    })), React__namespace.createElement(\"div\", {\n      className: \"rpv-core__display--hidden rpv-core__display--block-small\"\n    }, React__namespace.createElement(SwitchViewModeMenuItem, {\n      mode: core.ViewMode.DualPage,\n      onClick: toggle\n    })), React__namespace.createElement(\"div\", {\n      className: \"rpv-core__display--hidden rpv-core__display--block-small\"\n    }, React__namespace.createElement(SwitchViewModeMenuItem, {\n      mode: core.ViewMode.DualPageWithCover,\n      onClick: toggle\n    })), React__namespace.createElement(\"div\", {\n      className: \"rpv-core__display--hidden rpv-core__display--block-small\"\n    }, React__namespace.createElement(core.MenuDivider, null)), React__namespace.createElement(ShowPropertiesMenuItem, {\n      onClick: toggle\n    }));\n  };\n  return React__namespace.createElement(core.Popover, {\n    ariaControlsSuffix: \"toolbar-more-actions\",\n    ariaHasPopup: \"menu\",\n    position: portalPosition,\n    target: renderTarget,\n    content: renderContent,\n    offset: PORTAL_OFFSET,\n    closeOnClickOutside: true,\n    closeOnEscape: true\n  });\n};\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar renderDefaultToolbar = function (transformToolbarSlot) {\n  return function (defaultToolbarSlot) {\n    var toolbarSlot = React__namespace.useMemo(function () {\n      return transformToolbarSlot(defaultToolbarSlot);\n    }, []);\n    var direction = React__namespace.useContext(core.ThemeContext).direction;\n    var isRtl = direction === core.TextDirection.RightToLeft;\n    var CurrentPageInput = toolbarSlot.CurrentPageInput,\n      Download = toolbarSlot.Download,\n      EnterFullScreen = toolbarSlot.EnterFullScreen,\n      GoToNextPage = toolbarSlot.GoToNextPage,\n      GoToPreviousPage = toolbarSlot.GoToPreviousPage,\n      NumberOfPages = toolbarSlot.NumberOfPages,\n      Open = toolbarSlot.Open,\n      Print = toolbarSlot.Print,\n      ShowSearchPopover = toolbarSlot.ShowSearchPopover,\n      SwitchTheme = toolbarSlot.SwitchTheme,\n      Zoom = toolbarSlot.Zoom,\n      ZoomIn = toolbarSlot.ZoomIn,\n      ZoomOut = toolbarSlot.ZoomOut;\n    return React__namespace.createElement(\"div\", {\n      \"data-testid\": \"toolbar\",\n      className: core.classNames({\n        'rpv-toolbar': true,\n        'rpv-toolbar--rtl': isRtl\n      }),\n      role: \"toolbar\",\n      \"aria-orientation\": \"horizontal\"\n    }, React__namespace.createElement(\"div\", {\n      className: \"rpv-toolbar__left\"\n    }, React__namespace.createElement(\"div\", {\n      className: \"rpv-toolbar__item\"\n    }, React__namespace.createElement(ShowSearchPopover, null)), React__namespace.createElement(\"div\", {\n      className: \"rpv-core__display--hidden rpv-core__display--block-small\"\n    }, React__namespace.createElement(\"div\", {\n      className: \"rpv-toolbar__item\"\n    }, React__namespace.createElement(GoToPreviousPage, null))), React__namespace.createElement(\"div\", {\n      className: \"rpv-toolbar__item\"\n    }, React__namespace.createElement(CurrentPageInput, null), React__namespace.createElement(\"span\", {\n      className: \"rpv-toolbar__label\"\n    }, React__namespace.createElement(NumberOfPages, null))), React__namespace.createElement(\"div\", {\n      className: \"rpv-core__display--hidden rpv-core__display--block-small\"\n    }, React__namespace.createElement(\"div\", {\n      className: \"rpv-toolbar__item\"\n    }, React__namespace.createElement(GoToNextPage, null)))), React__namespace.createElement(\"div\", {\n      className: \"rpv-toolbar__center\"\n    }, React__namespace.createElement(\"div\", {\n      className: \"rpv-toolbar__item\"\n    }, React__namespace.createElement(ZoomOut, null)), React__namespace.createElement(\"div\", {\n      className: \"rpv-core__display--hidden rpv-core__display--block-small\"\n    }, React__namespace.createElement(\"div\", {\n      className: \"rpv-toolbar__item\"\n    }, React__namespace.createElement(Zoom, null))), React__namespace.createElement(\"div\", {\n      className: \"rpv-toolbar__item\"\n    }, React__namespace.createElement(ZoomIn, null))), React__namespace.createElement(\"div\", {\n      className: \"rpv-toolbar__right\"\n    }, React__namespace.createElement(\"div\", {\n      className: \"rpv-core__display--hidden rpv-core__display--block-medium\"\n    }, React__namespace.createElement(\"div\", {\n      className: \"rpv-toolbar__item\"\n    }, React__namespace.createElement(SwitchTheme, null))), React__namespace.createElement(\"div\", {\n      className: \"rpv-core__display--hidden rpv-core__display--block-medium\"\n    }, React__namespace.createElement(\"div\", {\n      className: \"rpv-toolbar__item\"\n    }, React__namespace.createElement(EnterFullScreen, null))), React__namespace.createElement(\"div\", {\n      className: \"rpv-core__display--hidden rpv-core__display--block-medium\"\n    }, React__namespace.createElement(\"div\", {\n      className: \"rpv-toolbar__item\"\n    }, React__namespace.createElement(Open, null))), React__namespace.createElement(\"div\", {\n      className: \"rpv-core__display--hidden rpv-core__display--block-medium\"\n    }, React__namespace.createElement(\"div\", {\n      className: \"rpv-toolbar__item\"\n    }, React__namespace.createElement(Download, null))), React__namespace.createElement(\"div\", {\n      className: \"rpv-core__display--hidden rpv-core__display--block-medium\"\n    }, React__namespace.createElement(\"div\", {\n      className: \"rpv-toolbar__item\"\n    }, React__namespace.createElement(Print, null))), React__namespace.createElement(\"div\", {\n      className: \"rpv-toolbar__item\"\n    }, React__namespace.createElement(MoreActionsPopover, {\n      toolbarSlot: toolbarSlot\n    }))));\n  };\n};\nvar defaultTransform = function (slot) {\n  var NumberOfPages = slot.NumberOfPages;\n  return Object.assign({}, slot, {\n    NumberOfPages: function () {\n      return React__namespace.createElement(React__namespace.Fragment, null, \"/ \", React__namespace.createElement(NumberOfPages, null));\n    }\n  });\n};\nvar DefaultToobar = function (toolbarSlot) {\n  return renderDefaultToolbar(defaultTransform)(toolbarSlot);\n};\nvar Toolbar = function (_a) {\n  var children = _a.children,\n    slot = _a.slot;\n  var render = children || DefaultToobar;\n  return render(slot);\n};\nvar toolbarPlugin = function (props) {\n  var fullScreenPluginInstance = fullScreen.fullScreenPlugin(props ? props.fullScreenPlugin : {});\n  var getFilePluginInstance = getFile.getFilePlugin(props ? props.getFilePlugin : {});\n  var openPluginInstance = open.openPlugin(props ? props.openPlugin : {});\n  var pageNavigationPluginInstance = pageNavigation.pageNavigationPlugin(props ? props.pageNavigationPlugin : {});\n  var printPluginInstance = print.printPlugin(props ? props.printPlugin : {});\n  var propertiesPluginInstance = properties.propertiesPlugin();\n  var rotatePluginInstance = rotate.rotatePlugin();\n  var scrollModePluginInstance = scrollMode.scrollModePlugin();\n  var searchPluginInstance = search.searchPlugin(props ? props.searchPlugin : {});\n  var selectionModePluginInstance = selectionMode.selectionModePlugin(props ? props.selectionModePlugin : {});\n  var themePluginInstance = theme.themePlugin();\n  var zoomPluginInstance = zoom.zoomPlugin(props ? props.zoomPlugin : {});\n  var plugins = [fullScreenPluginInstance, getFilePluginInstance, openPluginInstance, pageNavigationPluginInstance, printPluginInstance, propertiesPluginInstance, rotatePluginInstance, scrollModePluginInstance, searchPluginInstance, selectionModePluginInstance, themePluginInstance, zoomPluginInstance];\n  var ToolbarDecorator = React__namespace.useCallback(function (props) {\n    var EnterFullScreen = fullScreenPluginInstance.EnterFullScreen,\n      EnterFullScreenMenuItem = fullScreenPluginInstance.EnterFullScreenMenuItem;\n    var Download = getFilePluginInstance.Download,\n      DownloadMenuItem = getFilePluginInstance.DownloadMenuItem;\n    var Open = openPluginInstance.Open,\n      OpenMenuItem = openPluginInstance.OpenMenuItem;\n    var CurrentPageInput = pageNavigationPluginInstance.CurrentPageInput,\n      CurrentPageLabel = pageNavigationPluginInstance.CurrentPageLabel,\n      GoToFirstPage = pageNavigationPluginInstance.GoToFirstPage,\n      GoToFirstPageMenuItem = pageNavigationPluginInstance.GoToFirstPageMenuItem,\n      GoToLastPage = pageNavigationPluginInstance.GoToLastPage,\n      GoToLastPageMenuItem = pageNavigationPluginInstance.GoToLastPageMenuItem,\n      GoToNextPage = pageNavigationPluginInstance.GoToNextPage,\n      GoToNextPageMenuItem = pageNavigationPluginInstance.GoToNextPageMenuItem,\n      GoToPreviousPage = pageNavigationPluginInstance.GoToPreviousPage,\n      GoToPreviousPageMenuItem = pageNavigationPluginInstance.GoToPreviousPageMenuItem,\n      NumberOfPages = pageNavigationPluginInstance.NumberOfPages;\n    var Print = printPluginInstance.Print,\n      PrintMenuItem = printPluginInstance.PrintMenuItem;\n    var ShowProperties = propertiesPluginInstance.ShowProperties,\n      ShowPropertiesMenuItem = propertiesPluginInstance.ShowPropertiesMenuItem;\n    var Rotate = rotatePluginInstance.Rotate,\n      RotateBackwardMenuItem = rotatePluginInstance.RotateBackwardMenuItem,\n      RotateForwardMenuItem = rotatePluginInstance.RotateForwardMenuItem;\n    var SwitchScrollMode = scrollModePluginInstance.SwitchScrollMode,\n      SwitchScrollModeMenuItem = scrollModePluginInstance.SwitchScrollModeMenuItem,\n      SwitchViewMode = scrollModePluginInstance.SwitchViewMode,\n      SwitchViewModeMenuItem = scrollModePluginInstance.SwitchViewModeMenuItem;\n    var Search = searchPluginInstance.Search,\n      ShowSearchPopover = searchPluginInstance.ShowSearchPopover;\n    var SwitchSelectionMode = selectionModePluginInstance.SwitchSelectionMode,\n      SwitchSelectionModeMenuItem = selectionModePluginInstance.SwitchSelectionModeMenuItem;\n    var SwitchTheme = themePluginInstance.SwitchTheme,\n      SwitchThemeMenuItem = themePluginInstance.SwitchThemeMenuItem;\n    var CurrentScale = zoomPluginInstance.CurrentScale,\n      Zoom = zoomPluginInstance.Zoom,\n      ZoomIn = zoomPluginInstance.ZoomIn,\n      ZoomInMenuItem = zoomPluginInstance.ZoomInMenuItem,\n      ZoomOut = zoomPluginInstance.ZoomOut,\n      ZoomOutMenuItem = zoomPluginInstance.ZoomOutMenuItem;\n    return React__namespace.createElement(Toolbar, __assign({}, props, {\n      slot: {\n        CurrentPageInput: CurrentPageInput,\n        CurrentPageLabel: CurrentPageLabel,\n        CurrentScale: CurrentScale,\n        Download: Download,\n        DownloadMenuItem: DownloadMenuItem,\n        EnterFullScreen: EnterFullScreen,\n        EnterFullScreenMenuItem: EnterFullScreenMenuItem,\n        GoToFirstPage: GoToFirstPage,\n        GoToFirstPageMenuItem: GoToFirstPageMenuItem,\n        GoToLastPage: GoToLastPage,\n        GoToLastPageMenuItem: GoToLastPageMenuItem,\n        GoToNextPage: GoToNextPage,\n        GoToNextPageMenuItem: GoToNextPageMenuItem,\n        GoToPreviousPage: GoToPreviousPage,\n        GoToPreviousPageMenuItem: GoToPreviousPageMenuItem,\n        NumberOfPages: NumberOfPages,\n        Open: Open,\n        OpenMenuItem: OpenMenuItem,\n        Print: Print,\n        PrintMenuItem: PrintMenuItem,\n        Rotate: Rotate,\n        RotateBackwardMenuItem: RotateBackwardMenuItem,\n        RotateForwardMenuItem: RotateForwardMenuItem,\n        Search: Search,\n        ShowProperties: ShowProperties,\n        ShowPropertiesMenuItem: ShowPropertiesMenuItem,\n        ShowSearchPopover: ShowSearchPopover,\n        SwitchScrollMode: SwitchScrollMode,\n        SwitchScrollModeMenuItem: SwitchScrollModeMenuItem,\n        SwitchSelectionMode: SwitchSelectionMode,\n        SwitchSelectionModeMenuItem: SwitchSelectionModeMenuItem,\n        SwitchViewMode: SwitchViewMode,\n        SwitchViewModeMenuItem: SwitchViewModeMenuItem,\n        SwitchTheme: SwitchTheme,\n        SwitchThemeMenuItem: SwitchThemeMenuItem,\n        Zoom: Zoom,\n        ZoomIn: ZoomIn,\n        ZoomInMenuItem: ZoomInMenuItem,\n        ZoomOut: ZoomOut,\n        ZoomOutMenuItem: ZoomOutMenuItem\n      }\n    }));\n  }, []);\n  return {\n    fullScreenPluginInstance: fullScreenPluginInstance,\n    getFilePluginInstance: getFilePluginInstance,\n    openPluginInstance: openPluginInstance,\n    pageNavigationPluginInstance: pageNavigationPluginInstance,\n    printPluginInstance: printPluginInstance,\n    propertiesPluginInstance: propertiesPluginInstance,\n    rotatePluginInstance: rotatePluginInstance,\n    scrollModePluginInstance: scrollModePluginInstance,\n    searchPluginInstance: searchPluginInstance,\n    selectionModePluginInstance: selectionModePluginInstance,\n    themePluginInstance: themePluginInstance,\n    zoomPluginInstance: zoomPluginInstance,\n    install: function (pluginFunctions) {\n      plugins.forEach(function (plugin) {\n        if (plugin.install) {\n          plugin.install(pluginFunctions);\n        }\n      });\n    },\n    renderPageLayer: function (renderProps) {\n      return React__namespace.createElement(React__namespace.Fragment, null, plugins.map(function (plugin, idx) {\n        return plugin.renderPageLayer ? React__namespace.createElement(React__namespace.Fragment, {\n          key: idx\n        }, plugin.renderPageLayer(renderProps)) : React__namespace.createElement(React__namespace.Fragment, {\n          key: idx\n        });\n      }));\n    },\n    renderViewer: function (props) {\n      var slot = props.slot;\n      plugins.forEach(function (plugin) {\n        if (plugin.renderViewer) {\n          slot = plugin.renderViewer(__assign(__assign({}, props), {\n            slot: slot\n          }));\n        }\n      });\n      return slot;\n    },\n    uninstall: function (pluginFunctions) {\n      plugins.forEach(function (plugin) {\n        if (plugin.uninstall) {\n          plugin.uninstall(pluginFunctions);\n        }\n      });\n    },\n    onDocumentLoad: function (props) {\n      plugins.forEach(function (plugin) {\n        if (plugin.onDocumentLoad) {\n          plugin.onDocumentLoad(props);\n        }\n      });\n    },\n    onAnnotationLayerRender: function (props) {\n      plugins.forEach(function (plugin) {\n        if (plugin.onAnnotationLayerRender) {\n          plugin.onAnnotationLayerRender(props);\n        }\n      });\n    },\n    onTextLayerRender: function (props) {\n      plugins.forEach(function (plugin) {\n        if (plugin.onTextLayerRender) {\n          plugin.onTextLayerRender(props);\n        }\n      });\n    },\n    onViewerStateChange: function (viewerState) {\n      var newState = viewerState;\n      plugins.forEach(function (plugin) {\n        if (plugin.onViewerStateChange) {\n          newState = plugin.onViewerStateChange(newState);\n        }\n      });\n      return newState;\n    },\n    renderDefaultToolbar: renderDefaultToolbar,\n    Toolbar: ToolbarDecorator\n  };\n};\nexports.MoreActionsPopover = MoreActionsPopover;\nexports.MoreIcon = MoreIcon;\nexports.toolbarPlugin = toolbarPlugin;","map":null,"metadata":{},"sourceType":"script"}