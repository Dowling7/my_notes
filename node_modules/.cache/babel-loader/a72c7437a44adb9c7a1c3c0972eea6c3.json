{"ast":null,"code":"'use strict';\n\nvar core = require('@react-pdf-viewer/core');\nvar React = require('react');\nvar reactDom = require('react-dom');\nfunction _interopNamespaceDefault(e) {\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () {\n            return e[k];\n          }\n        });\n      }\n    });\n  }\n  n.default = e;\n  return Object.freeze(n);\n}\nvar React__namespace = /*#__PURE__*/_interopNamespaceDefault(React);\nvar getAllPagesNumbers = function (doc) {\n  return Array(doc.numPages).fill(0).map(function (_, i) {\n    return i;\n  });\n};\nvar generateRange = function (min, max) {\n  return Array(max - min + 1).fill(0).map(function (_, i) {\n    return min + i;\n  });\n};\nvar removeDuplicate = function (arr) {\n  return arr.filter(function (i) {\n    return arr.indexOf(i) === arr.lastIndexOf(i);\n  });\n};\nvar getCustomPagesNumbers = function (customPages) {\n  return function (doc) {\n    var results = [];\n    customPages.replace(/\\s+/g, '').split(',').forEach(function (part) {\n      var range = part.split('-').map(function (c) {\n        return parseInt(c, 10);\n      }).filter(function (c) {\n        return Number.isInteger(c);\n      });\n      if (range.length === 1) {\n        results.push(range[0] - 1);\n      } else if (range.length === 2) {\n        results.push.apply(results, generateRange(range[0] - 1, range[1] - 1));\n      }\n    });\n    return removeDuplicate(results).filter(function (i) {\n      return i >= 0 && i < doc.numPages;\n    });\n  };\n};\nvar getEvenPagesNumbers = function (doc) {\n  return Array(doc.numPages).fill(0).map(function (_, i) {\n    return i;\n  }).filter(function (i) {\n    return (i + 1) % 2 === 0;\n  });\n};\nvar getOddPagesNumbers = function (doc) {\n  return Array(doc.numPages).fill(0).map(function (_, i) {\n    return i;\n  }).filter(function (i) {\n    return (i + 1) % 2 === 1;\n  });\n};\nvar PrintIcon = function () {\n  return React__namespace.createElement(core.Icon, {\n    size: 16\n  }, React__namespace.createElement(\"path\", {\n    d: \"M7.5,19.499h9 M7.5,16.499h9 M5.5,16.5h-3c-1.103-0.003-1.997-0.897-2-2v-6c0.003-1.103,0.897-1.997,2-2h19\\n            c1.103,0.003,1.997,0.897,2,2v6c-0.003,1.103-0.897,1.997-2,2h-3\\n            M5.5,4.5v-4h9.586c0.265,0,0.52,0.105,0.707,0.293l2.414,2.414\\n            C18.395,3.394,18.5,3.649,18.5,3.914V4.5\\n            M18.5,22.5c0,0.552-0.448,1-1,1h-11c-0.552,0-1-0.448-1-1v-9h13V22.5z\\n            M3.5,8.499\\n            c0.552,0,1,0.448,1,1s-0.448,1-1,1s-1-0.448-1-1S2.948,8.499,3.5,8.499z\\n            M14.5,0.499v4h4\"\n  }));\n};\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar TOOLTIP_OFFSET = {\n  left: 0,\n  top: 8\n};\nvar PrintButton = function (_a) {\n  var enableShortcuts = _a.enableShortcuts,\n    onClick = _a.onClick;\n  var l10n = React__namespace.useContext(core.LocalizationContext).l10n;\n  var label = l10n && l10n.print ? l10n.print.print : 'Print';\n  var ariaKeyShortcuts = enableShortcuts ? core.isMac() ? 'Meta+P' : 'Ctrl+P' : '';\n  return React__namespace.createElement(core.Tooltip, {\n    ariaControlsSuffix: \"print\",\n    position: core.Position.BottomCenter,\n    target: React__namespace.createElement(core.MinimalButton, {\n      ariaKeyShortcuts: ariaKeyShortcuts,\n      ariaLabel: label,\n      testId: \"print__button\",\n      onClick: onClick\n    }, React__namespace.createElement(PrintIcon, null)),\n    content: function () {\n      return label;\n    },\n    offset: TOOLTIP_OFFSET\n  });\n};\nvar PrintStatus;\n(function (PrintStatus) {\n  PrintStatus[\"CheckingPermission\"] = \"CheckingPermission\";\n  PrintStatus[\"Inactive\"] = \"Inactive\";\n  PrintStatus[\"Preparing\"] = \"Preparing\";\n  PrintStatus[\"Cancelled\"] = \"Cancelled\";\n  PrintStatus[\"Ready\"] = \"Ready\";\n})(PrintStatus || (PrintStatus = {}));\nvar Print = function (_a) {\n  var children = _a.children,\n    enableShortcuts = _a.enableShortcuts,\n    store = _a.store;\n  var print = function () {\n    store.update('printStatus', PrintStatus.CheckingPermission);\n  };\n  var render = children || PrintButton;\n  return render({\n    enableShortcuts: enableShortcuts,\n    onClick: print\n  });\n};\nvar PERMISSION_PRINT = 4;\nvar PERMISSION_PRINT_HIGHT_QUALITY = 2048;\nvar CheckPrintPermission = function (_a) {\n  var doc = _a.doc,\n    store = _a.store;\n  var l10n = React__namespace.useContext(core.LocalizationContext).l10n;\n  var _b = React__namespace.useState(true),\n    isAllowed = _b[0],\n    setIsAllowed = _b[1];\n  React__namespace.useEffect(function () {\n    doc.getPermissions().then(function (permissions) {\n      var canPrint = permissions === null || permissions.includes(PERMISSION_PRINT) || permissions.includes(PERMISSION_PRINT_HIGHT_QUALITY);\n      canPrint ? store.update('printStatus', PrintStatus.Preparing) : setIsAllowed(false);\n    });\n  }, []);\n  return isAllowed ? React__namespace.createElement(React__namespace.Fragment, null) : React__namespace.createElement(core.Modal, {\n    ariaControlsSuffix: \"print-permission\",\n    closeOnClickOutside: false,\n    closeOnEscape: false,\n    content: function (toggle) {\n      var close = function () {\n        toggle();\n        store.update('printStatus', PrintStatus.Cancelled);\n      };\n      return React__namespace.createElement(React__namespace.Fragment, null, React__namespace.createElement(\"div\", {\n        className: \"rpv-print__permission-body\"\n      }, l10n && l10n.print ? l10n.print.disallowPrint : 'The document does not allow to print'), React__namespace.createElement(\"div\", {\n        className: \"rpv-print__permission-footer\"\n      }, React__namespace.createElement(core.Button, {\n        onClick: close\n      }, l10n && l10n.print ? l10n.print.close : 'Close')));\n    },\n    isOpened: true\n  });\n};\nvar PrintProgress = function (_a) {\n  var numLoadedPages = _a.numLoadedPages,\n    numPages = _a.numPages,\n    onCancel = _a.onCancel;\n  var l10n = React__namespace.useContext(core.LocalizationContext).l10n;\n  var direction = React__namespace.useContext(core.ThemeContext).direction;\n  var isRtl = direction === core.TextDirection.RightToLeft;\n  var progress = Math.floor(numLoadedPages * 100 / numPages);\n  return React__namespace.createElement(\"div\", {\n    className: \"rpv-print__progress\"\n  }, React__namespace.createElement(\"div\", {\n    className: core.classNames({\n      'rpv-print__progress-body': true,\n      'rpv-print__progress-body--rtl': isRtl\n    })\n  }, React__namespace.createElement(\"div\", {\n    className: \"rpv-print__progress-message\"\n  }, l10n && l10n.print ? l10n.print.preparingDocument : 'Preparing document ...'), React__namespace.createElement(\"div\", {\n    className: \"rpv-print__progress-bar\"\n  }, React__namespace.createElement(core.ProgressBar, {\n    progress: progress\n  })), React__namespace.createElement(core.Button, {\n    onClick: onCancel\n  }, l10n && l10n.print ? l10n.print.cancel : 'Cancel')));\n};\nvar isRunningInJest = function () {\n  return typeof process !== 'undefined' && process.env.JEST_WORKER_ID !== undefined;\n};\nvar PageThumbnail = function (_a) {\n  var canvas = _a.canvas,\n    page = _a.page,\n    pageHeight = _a.pageHeight,\n    pageIndex = _a.pageIndex,\n    pageWidth = _a.pageWidth,\n    rotation = _a.rotation,\n    onLoad = _a.onLoad;\n  var isMounted = core.useIsMounted();\n  var renderTask = React__namespace.useRef();\n  var _b = React__namespace.useState(''),\n    src = _b[0],\n    setSrc = _b[1];\n  var testWithJest = React__namespace.useMemo(function () {\n    return isRunningInJest();\n  }, []);\n  var handleImageLoad = function () {\n    if (!testWithJest) {\n      onLoad();\n    }\n  };\n  React__namespace.useEffect(function () {\n    var task = renderTask.current;\n    if (task) {\n      task.cancel();\n    }\n    var printUnit = 150 / 72;\n    canvas.height = Math.floor(pageHeight * printUnit);\n    canvas.width = Math.floor(pageWidth * printUnit);\n    var canvasContext = canvas.getContext('2d');\n    canvasContext.save();\n    canvasContext.fillStyle = 'rgb(255, 255, 255)';\n    canvasContext.fillRect(0, 0, canvas.width, canvas.height);\n    canvasContext.restore();\n    var viewport = page.getViewport({\n      rotation: rotation,\n      scale: 1\n    });\n    renderTask.current = page.render({\n      canvasContext: canvasContext,\n      intent: 'print',\n      transform: [printUnit, 0, 0, printUnit, 0, 0],\n      viewport: viewport\n    });\n    renderTask.current.promise.then(function () {\n      if ('toBlob' in canvas && 'createObjectURL' in URL) {\n        canvas.toBlob(function (blob) {\n          isMounted.current && setSrc(URL.createObjectURL(blob));\n          testWithJest && onLoad();\n        });\n      } else {\n        isMounted.current && setSrc(canvas.toDataURL());\n        testWithJest && onLoad();\n      }\n    }, function () {});\n  }, []);\n  return src && React__namespace.createElement(\"div\", {\n    className: \"rpv-print__page\"\n  }, React__namespace.createElement(\"img\", {\n    \"data-testid\": \"print__thumbnail-\".concat(pageIndex),\n    src: src,\n    onLoad: handleImageLoad\n  }));\n};\nvar PageThumbnailContainer = function (_a) {\n  var canvas = _a.canvas,\n    doc = _a.doc,\n    pageIndex = _a.pageIndex,\n    pageRotation = _a.pageRotation,\n    pageSize = _a.pageSize,\n    rotation = _a.rotation,\n    shouldRender = _a.shouldRender,\n    onLoad = _a.onLoad;\n  var isMounted = core.useIsMounted();\n  var _b = React__namespace.useState(null),\n    page = _b[0],\n    setPage = _b[1];\n  var isVertical = Math.abs(rotation + pageRotation) % 180 === 0;\n  React__namespace.useEffect(function () {\n    if (shouldRender) {\n      core.getPage(doc, pageIndex).then(function (pdfPage) {\n        isMounted.current && setPage(pdfPage);\n      });\n    }\n  }, [shouldRender]);\n  var rotationNumber = (pageSize.rotation + rotation + pageRotation) % 360;\n  return page && React__namespace.createElement(PageThumbnail, {\n    canvas: canvas,\n    page: page,\n    pageHeight: isVertical ? pageSize.pageHeight : pageSize.pageWidth,\n    pageIndex: pageIndex,\n    pageWidth: isVertical ? pageSize.pageWidth : pageSize.pageHeight,\n    rotation: rotationNumber,\n    onLoad: onLoad\n  });\n};\nvar PrintZone = function (_a) {\n  var doc = _a.doc,\n    numLoadedPages = _a.numLoadedPages,\n    pagesRotation = _a.pagesRotation,\n    pageSizes = _a.pageSizes,\n    printPages = _a.printPages,\n    printStatus = _a.printStatus,\n    rotation = _a.rotation,\n    onCancel = _a.onCancel,\n    onLoad = _a.onLoad;\n  var canvas = React__namespace.useMemo(function () {\n    return document.createElement('canvas');\n  }, []);\n  var container = React__namespace.useMemo(function () {\n    var zoneEle = document.querySelector('.rpv-print__zone');\n    if (zoneEle) {\n      return zoneEle;\n    }\n    var div = document.createElement('div');\n    div.classList.add('rpv-print__zone');\n    div.setAttribute('data-testid', 'print__zone');\n    document.body.appendChild(div);\n    return div;\n  }, []);\n  React__namespace.useEffect(function () {\n    if (printStatus === PrintStatus.Ready) {\n      document.documentElement.classList.add('rpv-print__html-printing');\n      document.body.classList.add('rpv-print__body-printing');\n      window.print();\n    }\n    var handler = function () {\n      if (printStatus === PrintStatus.Ready) {\n        document.documentElement.classList.remove('rpv-print__html-printing');\n        document.body.classList.remove('rpv-print__body-printing');\n        var zones = document.querySelectorAll('.rpv-print__zone');\n        if (zones) {\n          zones.forEach(function (zoneEle) {\n            zoneEle.parentElement.removeChild(zoneEle);\n          });\n        }\n        canvas.height = 0;\n        canvas.width = 0;\n        document.removeEventListener('mousemove', handler);\n        onCancel();\n      }\n    };\n    document.addEventListener('mousemove', handler);\n    return function () {\n      return document.removeEventListener('mousemove', handler);\n    };\n  }, [printStatus]);\n  var pageHeight = pageSizes[0].pageHeight;\n  var pageWidth = pageSizes[0].pageWidth;\n  return reactDom.createPortal(React__namespace.createElement(React__namespace.Fragment, null, printPages.map(function (pageIndex, loopIndex) {\n    return React__namespace.createElement(PageThumbnailContainer, {\n      key: pageIndex,\n      canvas: canvas,\n      doc: doc,\n      pageIndex: pageIndex,\n      pageRotation: pagesRotation.has(pageIndex) ? pagesRotation.get(pageIndex) : 0,\n      pageSize: pageSizes[pageIndex],\n      rotation: rotation,\n      shouldRender: loopIndex === numLoadedPages,\n      onLoad: onLoad\n    });\n  }), React__namespace.createElement(\"style\", {\n    dangerouslySetInnerHTML: {\n      __html: \"@page { size: \".concat(pageWidth, \"pt \").concat(pageHeight, \"pt }\")\n    }\n  })), container);\n};\nvar PrintContainer = function (_a) {\n  var doc = _a.doc,\n    pagesRotation = _a.pagesRotation,\n    pageSizes = _a.pageSizes,\n    renderProgressBar = _a.renderProgressBar,\n    rotation = _a.rotation,\n    setPages = _a.setPages,\n    store = _a.store;\n  var _b = React__namespace.useState(PrintStatus.Inactive),\n    printStatus = _b[0],\n    setPrintStatus = _b[1];\n  var _c = React__namespace.useState(0),\n    numLoadedPagesForPrint = _c[0],\n    setNumLoadedPagesForPrint = _c[1];\n  var printPages = React__namespace.useMemo(function () {\n    var numPages = doc.numPages;\n    return setPages(doc).filter(function (index) {\n      return index >= 0 && index < numPages;\n    });\n  }, [doc, setPages]);\n  var numPrintPages = printPages.length;\n  var cancelPrinting = function () {\n    setNumLoadedPagesForPrint(0);\n    setPrintStatus(PrintStatus.Inactive);\n  };\n  var handlePrintStatus = function (status) {\n    return setPrintStatus(status);\n  };\n  var onLoadPage = function () {\n    var total = numLoadedPagesForPrint + 1;\n    if (total <= numPrintPages) {\n      setNumLoadedPagesForPrint(total);\n      total === numPrintPages && setPrintStatus(PrintStatus.Ready);\n    }\n  };\n  React__namespace.useEffect(function () {\n    store.subscribe('printStatus', handlePrintStatus);\n    return function () {\n      store.unsubscribe('printStatus', handlePrintStatus);\n    };\n  }, []);\n  return React__namespace.createElement(React__namespace.Fragment, null, printStatus === PrintStatus.CheckingPermission && React__namespace.createElement(CheckPrintPermission, {\n    doc: doc,\n    store: store\n  }), printStatus === PrintStatus.Preparing && (renderProgressBar ? renderProgressBar(numLoadedPagesForPrint, numPrintPages, cancelPrinting) : React__namespace.createElement(PrintProgress, {\n    numLoadedPages: numLoadedPagesForPrint,\n    numPages: numPrintPages,\n    onCancel: cancelPrinting\n  })), (printStatus === PrintStatus.Preparing || printStatus === PrintStatus.Ready) && numLoadedPagesForPrint <= numPrintPages && React__namespace.createElement(PrintZone, {\n    doc: doc,\n    numLoadedPages: numLoadedPagesForPrint,\n    pagesRotation: pagesRotation,\n    pageSizes: pageSizes,\n    printPages: printPages,\n    printStatus: printStatus,\n    rotation: rotation,\n    onCancel: cancelPrinting,\n    onLoad: onLoadPage\n  }));\n};\nvar PrintMenuItem = function (_a) {\n  var onClick = _a.onClick;\n  var l10n = React__namespace.useContext(core.LocalizationContext).l10n;\n  var label = l10n && l10n.print ? l10n.print.print : 'Print';\n  return React__namespace.createElement(core.MenuItem, {\n    icon: React__namespace.createElement(PrintIcon, null),\n    testId: \"print__menu\",\n    onClick: onClick\n  }, label);\n};\nvar ShortcutHandler = function (_a) {\n  var containerRef = _a.containerRef,\n    store = _a.store;\n  var keydownHandler = function (e) {\n    if (e.shiftKey || e.altKey || e.key !== 'p') {\n      return;\n    }\n    var isCommandPressed = core.isMac() ? e.metaKey : e.ctrlKey;\n    if (!isCommandPressed) {\n      return;\n    }\n    var containerEle = containerRef.current;\n    if (!containerEle || !document.activeElement || !containerEle.contains(document.activeElement)) {\n      return;\n    }\n    e.preventDefault();\n    store.update('printStatus', PrintStatus.Preparing);\n  };\n  React__namespace.useEffect(function () {\n    var containerEle = containerRef.current;\n    if (!containerEle) {\n      return;\n    }\n    document.addEventListener('keydown', keydownHandler);\n    return function () {\n      document.removeEventListener('keydown', keydownHandler);\n    };\n  }, [containerRef.current]);\n  return React__namespace.createElement(React__namespace.Fragment, null);\n};\nvar printPlugin = function (props) {\n  var printPluginProps = React__namespace.useMemo(function () {\n    return Object.assign({}, {\n      enableShortcuts: true,\n      setPages: function (doc) {\n        return Array(doc.numPages).fill(0).map(function (_, i) {\n          return i;\n        });\n      }\n    }, props);\n  }, []);\n  var store = React__namespace.useMemo(function () {\n    return core.createStore({\n      printStatus: PrintStatus.Inactive\n    });\n  }, []);\n  var print = function () {\n    store.update('printStatus', PrintStatus.CheckingPermission);\n  };\n  var PrintDecorator = function (props) {\n    return React__namespace.createElement(Print, __assign({\n      enableShortcuts: printPluginProps.enableShortcuts\n    }, props, {\n      store: store\n    }));\n  };\n  var PrintButtonDecorator = function () {\n    return React__namespace.createElement(PrintDecorator, null, function (props) {\n      return React__namespace.createElement(PrintButton, __assign({}, props));\n    });\n  };\n  var PrintMenuItemDecorator = function (props) {\n    return React__namespace.createElement(PrintDecorator, null, function (p) {\n      return React__namespace.createElement(PrintMenuItem, {\n        onClick: function () {\n          p.onClick();\n          props.onClick();\n        }\n      });\n    });\n  };\n  var renderViewer = function (renderViewerProps) {\n    var slot = renderViewerProps.slot;\n    var updateSlot = {\n      children: React__namespace.createElement(React__namespace.Fragment, null, printPluginProps.enableShortcuts && React__namespace.createElement(ShortcutHandler, {\n        containerRef: renderViewerProps.containerRef,\n        store: store\n      }), React__namespace.createElement(PrintContainer, {\n        doc: renderViewerProps.doc,\n        pagesRotation: renderViewerProps.pagesRotation,\n        pageSizes: renderViewerProps.pageSizes,\n        renderProgressBar: props === null || props === void 0 ? void 0 : props.renderProgressBar,\n        rotation: renderViewerProps.rotation,\n        setPages: printPluginProps.setPages,\n        store: store\n      }), slot.children)\n    };\n    return __assign(__assign({}, slot), updateSlot);\n  };\n  var setPages = function (printPages) {\n    printPluginProps.setPages = printPages;\n  };\n  return {\n    print: print,\n    renderViewer: renderViewer,\n    Print: PrintDecorator,\n    PrintButton: PrintButtonDecorator,\n    PrintMenuItem: PrintMenuItemDecorator,\n    setPages: setPages\n  };\n};\nexports.PrintIcon = PrintIcon;\nexports.getAllPagesNumbers = getAllPagesNumbers;\nexports.getCustomPagesNumbers = getCustomPagesNumbers;\nexports.getEvenPagesNumbers = getEvenPagesNumbers;\nexports.getOddPagesNumbers = getOddPagesNumbers;\nexports.printPlugin = printPlugin;","map":null,"metadata":{},"sourceType":"script"}